---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import type { Post } from '../types';

export interface Props {
	post:Post;
}

const { title, excerpt = '', publish_date, update_date, image, content ,author, categories } = Astro.props.post;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={excerpt || ''} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
			.tags {
				display: flex;
				flex-wrap: wrap;
				margin: 1em auto;
			}
			.tags a {
				margin: 0.25em;
				border: 1px solid rgb(var(--gray));
				border-radius: 0.5em;
				padding: 0.5em 0.75em;
				font-size: 0.75em;
				background: rgb(var(--gray-light));
				color: rgb(var(--gray-dark));
				text-decoration: none;
				transition: color 0.2s ease, background-color 0.2s ease;
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="hero-image">
					{image && <img width={1020} height={510} src={image} alt="" />}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={new Date(publish_date)} />
							{
								update_date && (
									<div class="last-updated-on">
										Last updated on <FormattedDate date={new Date(update_date)} />
									</div>
								)
							}
						</div>
						<div class="author">
							By {author}
						</div>
						<h1>{title}</h1>
						<hr />
					</div>
					
					<slot />
					<Fragment set:html={content}  />
					<div>
					</div>
					<div class="tags">
						
						{categories && categories.map((tag) => <p class="tag"><a href={`/category/${tag}`}>{tag}</a></p>)}
					</div>
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
